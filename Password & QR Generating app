import time
from tkinter import messagebox
import pyqrcode
import random
from tkinter import *
import os


while True:
    password = input("Enter your password to check strength: ")
    if len(password) < 8:
        print("Short Password. Must be atleast 8 letters.")
    else:
        #Counting presence of numbers in the string with the count method.
        space = password.count(' ')
        numb1 = password.count('1')
        numb2 = password.count('2')
        numb3 = password.count('3')
        numb4 = password.count('4')
        numb5 = password.count('5')
        numb6 = password.count('6')
        numb7 = password.count('7')
        numb8 = password.count('8')
        numb9 = password.count('9')
        numb0 = password.count('0')

        total_numbers = int(numb1) + int(numb2) + int(numb3) + int(numb4) + int(numb5) + int(numb6) + int(numb7) + int(numb8) + int(numb9) + int(numb0)

        char1 = password.count('~')
        char2 = password.count('`')
        char3 = password.count('!')
        char4 = password.count('@')
        char5 = password.count('#')
        char6 = password.count('$')
        char7 = password.count('%')
        char8 = password.count('^')
        char9 = password.count('&')
        char10 = password.count('*')
        char11= password.count('(')
        char12 = password.count(')')
        char13= password.count('_')
        char14 = password.count('-')
        char15 = password.count('=')
        char16 = password.count('+')
        char17 = password.count('|')
        char18 = password.count('}')
        char19 = password.count('{')
        char20 = password.count(']')
        char21 = password.count('[')
        char22 = password.count('"')
        char23 = password.count("'")
        char24 = password.count(';')
        char25 = password.count(':')
        char26 = password.count('/')
        char27 = password.count('?')
        char28 = password.count('.')
        char29 = password.count('>')
        char30 = password.count('<')
        char31 = password.count(',')
        
        total_characters = char1 + char2 + char3+ char4+ char5+ char6+ char7+ char8+ char9+ char10+ char11+ char12+ char13+ char14+ char15+ char16+ char17+ char18+ char19+ char20+ char21+ char22+ char23+ char24+ char25+ char26+ char27+ char28+ char29+ char30+ char31

        capital_letters = sum(1 for c in password if c.isupper())
        def composition():
            nn = ("Numbers: " + str(total_numbers))
            nn1 = ("Symbols: " + str(total_characters))
            nn2 = ("Capital Letters: " + str(capital_letters))
            nn3 = ("Spaces: " + str(space))
            nn4 = ("Small Letters: " + str(len(password)-(total_numbers+total_characters+capital_letters+space)))
            new_lb = (nn + "   |" + nn1 + "    |" + nn2 + "    |" + nn3 + "    |" + nn4)
            llb = Label(root, text=new_lb, font=('arial 10 bold'), fg="red").place(x =70, y=600)
        percentage1 = 0
        if total_numbers >= 3:
            percentage1 += 25
        elif total_numbers >= 2:
            percentage1 += 12.5
        elif total_numbers == 0:
            percentage1 +=0
        percentage2 = 0
        if total_characters >=2:
            percentage2 += 25
        elif total_characters == 1:
            percentage2 += 12.5
        elif total_characters == 0:
            percentage2 += 0
        percentage3 = 0
        if capital_letters >= 2:
            percentage3 += 25
            #print(percentage3)
        elif capital_letters <= 1:
            percentage3 += 0
        percentage4 = 0
        if len(password) >= 8:
            percentage4 += 25
        total_percentage = percentage1 + percentage2 + percentage3 + percentage4
        if total_percentage == 100:
            print("Very Strong Password.")
        elif total_percentage <= 50:
            print("Weak Password.")
        elif 50 < total_percentage <100:
            print("Decent Password but can be made more strong.")
        print(total_percentage)
        ask = input("Do you want to generate a strong password? (y/n) \n")
        if ask == "y" or ask == "Y":
            root =Tk()
            root.title("Sahil's Password Generator")
            root.geometry("700x700+350+0")
            root.configure(background='steelblue')
            heading = Label(root, text = "Password Portal", font=('verdana 40 bold'), fg="green").pack()
            alpha = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
            small = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
            numbers = ['1','2','3','4','5','6','8','7','0','9']
            symbols_lst = ['`','~','!','@','#','$','%','^','&','*','(',')','_','-','=','+','|','}','{',']','[',':',';','"',"'",'/','?','>','<','.',',']
            new1 = random.choice(alpha)
            new2 = random.choice(small)
            new3 = random.choice(numbers)
            new4 = random.choice(numbers)
            new5 = random.choice(small)
            new6 = random.choice(symbols_lst)
            new7 = random.choice(alpha)
            new8 = random.choice(symbols_lst)
            new9 = random.choice(small)
            new10 = random.choice(small)
            new11 = random.choice(numbers)
            new12 = random.choice(small)
            new13 = random.choice(alpha)
            new14 = random.choice(symbols_lst)
            new15 = random.choice(symbols_lst)
            total_new = new1 + new2 +new3 +new4 +new5 +new6 +new7 +new8  +new9 +new10 +new11 +new12 +new13 +new14 +new15
        def calculate():
            label1 = Label(root, text=total_new, font=('arial 20 bold'), fg='green').place(x= 200, y=400)
            messagebox.showinfo("password generated ",total_new)
        def create():
            file = open("password.txt", "w")
            file.write(str(total_new) + " is your new password.")
            file.close()

            lllb = Label(root, text= "Sucessfully created Text File.").place(x=180 , y=570)
            
        def quit():
            root.destroy()
        def qrcode():
            q=pyqrcode.create(total_new)
            q.png("myQR.png",scale=7)
            file=open("myQR.png","r")
            lllb = Label(root, text= "QR Code is saved at source folder.").place(x=200 , y=650)
        rule = Label(root, text="*Steps: ", font=('arial 20 bold'), fg="green").place(x=60, y=90)
        rule1 = Label(root, text="1. GENERATE PASSWORD. ", font=('arial 18 bold'), fg="blue").place(x=60, y=130)
        rule2 = Label(root, text="2. SAVE PASSWORD IN A FILE.", font=('arial 18 bold'), fg="blue").place(x=60, y=160)
        rule3 = Label(root, text="3. CHARACTERSTICS OF PASSWORD.", font=('arial 18 bold'), fg="blue").place(x=60, y=190)
        btn1 = Button(root, text="Generate Password", width=15, height=1, bg="lightgreen", command=calculate).place(x=120, y=500)
        btn2 = Button(root, text="Create a Text File", width=15, height=1, bg="yellow", command=create).place(x=250, y=500)
        btn = Button(root, text="Password characteristics", width=20, height=1, bg="steelblue", command=composition).place(x=380, y=500)
        btn_lst = Button(root, text="Exit", width=10,bg='red', height=1, command=quit).place(x=200, y=530)
        btn3=Button(root, text="Get QR code", width=15, height=1, bg="blue", command=qrcode).place(x=350, y=530)
        root.mainloop()
